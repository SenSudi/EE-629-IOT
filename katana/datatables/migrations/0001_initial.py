# -*- coding: utf-8 -*-
# Generated by Django 1.10.3 on 2016-12-19 03:44
from __future__ import unicode_literals

from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('project', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Command',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(blank=True, default='', max_length=100)),
                ('command', models.CharField(blank=True, default='', max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Data_Cidr',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('subnet', models.CharField(blank=True, default='', max_length=100)),
                ('version', models.CharField(blank=True, default='', max_length=100)),
                ('net_name', models.CharField(blank=True, default='', max_length=100)),
                ('org_name', models.CharField(blank=True, default='', max_length=100)),
                ('bgp_asn', models.CharField(blank=True, default='', max_length=100)),
                ('ipv4', models.CharField(blank=True, default='', max_length=100)),
                ('ipv6', models.CharField(blank=True, default='', max_length=100)),
                ('text_command', models.CharField(blank=True, default='', max_length=1000)),
                ('command', models.ManyToManyField(blank=True, to='datatables.Command')),
            ],
        ),
        migrations.CreateModel(
            name='Data_Dns',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rec_type', models.CharField(blank=True, default='', max_length=100)),
                ('name', models.CharField(blank=True, default='', max_length=100)),
                ('value', models.CharField(blank=True, default='', max_length=100)),
                ('text_command', models.CharField(blank=True, default='', max_length=1000)),
                ('command', models.ManyToManyField(blank=True, to='datatables.Command')),
            ],
        ),
        migrations.CreateModel(
            name='Data_Domain',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, default='', max_length=100)),
                ('name_server', models.CharField(blank=True, default='', max_length=100)),
                ('text_command', models.CharField(blank=True, default='', max_length=1000)),
                ('command', models.ManyToManyField(blank=True, to='datatables.Command')),
            ],
        ),
        migrations.CreateModel(
            name='Data_Email',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('address', models.CharField(blank=True, default='', max_length=100)),
                ('f_name', models.CharField(blank=True, default='', max_length=100)),
                ('l_name', models.CharField(blank=True, default='', max_length=100)),
                ('text_command', models.CharField(blank=True, default='', max_length=1000)),
                ('command', models.ManyToManyField(blank=True, to='datatables.Command')),
            ],
        ),
        migrations.CreateModel(
            name='Data_File',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, default='', max_length=100)),
                ('file_type', models.CharField(blank=True, default='', max_length=100)),
                ('obtained_from', models.CharField(blank=True, default='', max_length=100)),
                ('meta_data', models.CharField(blank=True, default='', max_length=1000)),
                ('text_command', models.CharField(blank=True, default='', max_length=1000)),
                ('command', models.ManyToManyField(blank=True, to='datatables.Command')),
            ],
        ),
        migrations.CreateModel(
            name='Data_Host',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ip', models.CharField(blank=True, default='', max_length=100)),
                ('name', models.CharField(blank=True, default='', max_length=100)),
                ('os', models.CharField(blank=True, default='', max_length=100)),
                ('privilege', models.CharField(blank=True, default='', max_length=100)),
                ('text_command', models.CharField(blank=True, default='', max_length=1000)),
                ('command', models.ManyToManyField(blank=True, to='datatables.Command')),
            ],
        ),
        migrations.CreateModel(
            name='Data_Location',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('street', models.CharField(blank=True, default='', max_length=100)),
                ('street_2', models.CharField(blank=True, default='', max_length=100)),
                ('city', models.CharField(blank=True, default='', max_length=100)),
                ('state', models.CharField(blank=True, default='', max_length=100)),
                ('zip_code', models.CharField(blank=True, default='', max_length=100)),
                ('county', models.CharField(blank=True, default='', max_length=100)),
                ('country', models.CharField(blank=True, default='', max_length=100)),
                ('gps', models.CharField(blank=True, default='', max_length=100)),
                ('description', models.CharField(blank=True, default='', max_length=100)),
                ('verified', models.BooleanField(default=False)),
                ('text_command', models.CharField(blank=True, default='', max_length=1000)),
                ('command', models.ManyToManyField(blank=True, to='datatables.Command')),
            ],
        ),
        migrations.CreateModel(
            name='Data_Person',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('f_name', models.CharField(blank=True, default='', max_length=100)),
                ('m_name', models.CharField(blank=True, default='', max_length=100)),
                ('l_name', models.CharField(blank=True, default='', max_length=100)),
                ('u_name', models.CharField(blank=True, default='', max_length=100)),
                ('password', models.CharField(blank=True, default='', max_length=100)),
                ('location_name', models.CharField(blank=True, default='', max_length=100)),
                ('title', models.CharField(blank=True, default='', max_length=100)),
                ('dept', models.CharField(blank=True, default='', max_length=100)),
                ('emp_id', models.CharField(blank=True, default='', max_length=100)),
                ('badge_num', models.CharField(blank=True, default='', max_length=100)),
                ('text_command', models.CharField(blank=True, default='', max_length=1000)),
                ('command', models.ManyToManyField(blank=True, to='datatables.Command')),
            ],
        ),
        migrations.CreateModel(
            name='Data_Phone',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('number', models.CharField(blank=True, default='', max_length=100)),
                ('suffix_range', models.CharField(blank=True, default='', max_length=100)),
                ('verified', models.BooleanField(default=False)),
                ('text_command', models.CharField(blank=True, default='', max_length=1000)),
                ('command', models.ManyToManyField(blank=True, to='datatables.Command')),
            ],
        ),
        migrations.CreateModel(
            name='Data_Service',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ip', models.CharField(blank=True, default='', max_length=100)),
                ('protocol', models.CharField(blank=True, default='', max_length=100)),
                ('port', models.CharField(blank=True, default='', max_length=100)),
                ('status', models.CharField(blank=True, default='', max_length=100)),
                ('name', models.CharField(blank=True, default='', max_length=100)),
                ('banner', models.CharField(blank=True, default='', max_length=100)),
                ('text_command', models.CharField(blank=True, default='', max_length=1000)),
                ('command', models.ManyToManyField(blank=True, to='datatables.Command')),
            ],
        ),
        migrations.CreateModel(
            name='Data_URL',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('resource_type', models.CharField(blank=True, default='', max_length=100)),
                ('target', models.CharField(blank=True, default='', max_length=100)),
                ('response_code', models.CharField(blank=True, default='', max_length=100)),
                ('live', models.BooleanField(default=False)),
                ('linked_from', models.CharField(blank=True, default='', max_length=100)),
                ('text_command', models.CharField(blank=True, default='', max_length=1000)),
                ('command', models.ManyToManyField(blank=True, to='datatables.Command')),
            ],
        ),
        migrations.CreateModel(
            name='Data_User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, default='', max_length=100)),
                ('privilege', models.CharField(blank=True, default='', max_length=100)),
                ('password', models.CharField(blank=True, default='', max_length=100)),
                ('hash_type', models.CharField(blank=True, default='', max_length=100)),
                ('sid', models.CharField(blank=True, default='', max_length=100)),
                ('src', models.CharField(blank=True, default='', max_length=100)),
                ('text_command', models.CharField(blank=True, default='', max_length=1000)),
                ('command', models.ManyToManyField(blank=True, to='datatables.Command')),
            ],
        ),
        migrations.CreateModel(
            name='Data_Vuln',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, default='', max_length=100)),
                ('ip', models.CharField(blank=True, default='', max_length=100)),
                ('hostname', models.CharField(blank=True, default='', max_length=100)),
                ('protocol', models.CharField(blank=True, default='', max_length=100)),
                ('service', models.CharField(blank=True, default='', max_length=100)),
                ('description', models.CharField(blank=True, default='', max_length=100)),
                ('severity', models.CharField(blank=True, default='', max_length=100)),
                ('cve', models.CharField(blank=True, default='', max_length=100)),
                ('cvs', models.CharField(blank=True, default='', max_length=100)),
                ('text_command', models.CharField(blank=True, default='', max_length=1000)),
                ('command', models.ManyToManyField(blank=True, to='datatables.Command')),
            ],
        ),
        migrations.CreateModel(
            name='Data_Whois',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, default='', max_length=100)),
                ('handle', models.CharField(blank=True, default='', max_length=100)),
                ('reg_date', models.DateField(default=django.utils.timezone.now)),
                ('update_date', models.DateField(default=django.utils.timezone.now)),
                ('text_command', models.CharField(blank=True, default='', max_length=1000)),
                ('command', models.ManyToManyField(blank=True, to='datatables.Command')),
            ],
        ),
        migrations.CreateModel(
            name='Import_Table',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cidr', models.ManyToManyField(blank=True, to='datatables.Data_Cidr')),
                ('dns', models.ManyToManyField(blank=True, to='datatables.Data_Dns')),
                ('domain', models.ManyToManyField(blank=True, to='datatables.Data_Domain')),
                ('email', models.ManyToManyField(blank=True, to='datatables.Data_Email')),
                ('file', models.ManyToManyField(blank=True, to='datatables.Data_File')),
                ('host', models.ManyToManyField(blank=True, to='datatables.Data_Host')),
                ('location', models.ManyToManyField(blank=True, to='datatables.Data_Location')),
                ('person', models.ManyToManyField(blank=True, to='datatables.Data_Person')),
                ('phone', models.ManyToManyField(blank=True, to='datatables.Data_Phone')),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='project.Project')),
                ('service', models.ManyToManyField(blank=True, to='datatables.Data_Service')),
                ('url', models.ManyToManyField(blank=True, to='datatables.Data_URL')),
                ('user', models.ManyToManyField(blank=True, to='datatables.Data_User')),
                ('vuln', models.ManyToManyField(blank=True, to='datatables.Data_Vuln')),
                ('whois', models.ManyToManyField(blank=True, to='datatables.Data_Whois')),
            ],
        ),
        migrations.CreateModel(
            name='Master_Table',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cidr', models.ManyToManyField(blank=True, to='datatables.Data_Cidr')),
                ('dns', models.ManyToManyField(blank=True, to='datatables.Data_Dns')),
                ('domain', models.ManyToManyField(blank=True, to='datatables.Data_Domain')),
                ('email', models.ManyToManyField(blank=True, to='datatables.Data_Email')),
                ('file', models.ManyToManyField(blank=True, to='datatables.Data_File')),
                ('host', models.ManyToManyField(blank=True, to='datatables.Data_Host')),
                ('location', models.ManyToManyField(blank=True, to='datatables.Data_Location')),
                ('person', models.ManyToManyField(blank=True, to='datatables.Data_Person')),
                ('phone', models.ManyToManyField(blank=True, to='datatables.Data_Phone')),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='project.Project')),
                ('service', models.ManyToManyField(blank=True, to='datatables.Data_Service')),
                ('url', models.ManyToManyField(blank=True, to='datatables.Data_URL')),
                ('user', models.ManyToManyField(blank=True, to='datatables.Data_User')),
                ('vuln', models.ManyToManyField(blank=True, to='datatables.Data_Vuln')),
                ('whois', models.ManyToManyField(blank=True, to='datatables.Data_Whois')),
            ],
        ),
        migrations.CreateModel(
            name='Scrap_Table',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cidr', models.ManyToManyField(blank=True, to='datatables.Data_Cidr')),
                ('dns', models.ManyToManyField(blank=True, to='datatables.Data_Dns')),
                ('domain', models.ManyToManyField(blank=True, to='datatables.Data_Domain')),
                ('email', models.ManyToManyField(blank=True, to='datatables.Data_Email')),
                ('file', models.ManyToManyField(blank=True, to='datatables.Data_File')),
                ('host', models.ManyToManyField(blank=True, to='datatables.Data_Host')),
                ('location', models.ManyToManyField(blank=True, to='datatables.Data_Location')),
                ('person', models.ManyToManyField(blank=True, to='datatables.Data_Person')),
                ('phone', models.ManyToManyField(blank=True, to='datatables.Data_Phone')),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='project.Project')),
                ('service', models.ManyToManyField(blank=True, to='datatables.Data_Service')),
                ('url', models.ManyToManyField(blank=True, to='datatables.Data_URL')),
                ('user', models.ManyToManyField(blank=True, to='datatables.Data_User')),
                ('vuln', models.ManyToManyField(blank=True, to='datatables.Data_Vuln')),
                ('whois', models.ManyToManyField(blank=True, to='datatables.Data_Whois')),
            ],
        ),
    ]
